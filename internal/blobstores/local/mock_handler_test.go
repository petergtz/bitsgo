// Automatically generated by pegomock. DO NOT EDIT!
// Source: net/http (interfaces: Handler)

package local_test

import (
	http "net/http"
	"reflect"

	pegomock "github.com/petergtz/pegomock"
)

type MockHandler struct {
	fail func(message string, callerSkip ...int)
}

func NewMockHandler() *MockHandler {
	return &MockHandler{fail: pegomock.GlobalFailHandler}
}

func (mock *MockHandler) ServeHTTP(_param0 http.ResponseWriter, _param1 *http.Request) {
	params := []pegomock.Param{_param0, _param1}
	pegomock.GetGenericMockFrom(mock).Invoke("ServeHTTP", params, []reflect.Type{})
}

func (mock *MockHandler) VerifyWasCalledOnce() *VerifierHandler {
	return &VerifierHandler{mock, pegomock.Times(1), nil}
}

func (mock *MockHandler) VerifyWasCalled(invocationCountMatcher pegomock.Matcher) *VerifierHandler {
	return &VerifierHandler{mock, invocationCountMatcher, nil}
}

func (mock *MockHandler) VerifyWasCalledInOrder(invocationCountMatcher pegomock.Matcher, inOrderContext *pegomock.InOrderContext) *VerifierHandler {
	return &VerifierHandler{mock, invocationCountMatcher, inOrderContext}
}

type VerifierHandler struct {
	mock                   *MockHandler
	invocationCountMatcher pegomock.Matcher
	inOrderContext         *pegomock.InOrderContext
}

func (verifier *VerifierHandler) ServeHTTP(_param0 http.ResponseWriter, _param1 *http.Request) *Handler_ServeHTTP_OngoingVerification {
	params := []pegomock.Param{_param0, _param1}
	methodInvocations := pegomock.GetGenericMockFrom(verifier.mock).Verify(verifier.inOrderContext, verifier.invocationCountMatcher, "ServeHTTP", params)
	return &Handler_ServeHTTP_OngoingVerification{mock: verifier.mock, methodInvocations: methodInvocations}
}

type Handler_ServeHTTP_OngoingVerification struct {
	mock              *MockHandler
	methodInvocations []pegomock.MethodInvocation
}

func (c *Handler_ServeHTTP_OngoingVerification) GetCapturedArguments() (http.ResponseWriter, *http.Request) {
	_param0, _param1 := c.GetAllCapturedArguments()
	return _param0[len(_param0)-1], _param1[len(_param1)-1]
}

func (c *Handler_ServeHTTP_OngoingVerification) GetAllCapturedArguments() (_param0 []http.ResponseWriter, _param1 []*http.Request) {
	params := pegomock.GetGenericMockFrom(c.mock).GetInvocationParams(c.methodInvocations)
	if len(params) > 0 {
		_param0 = make([]http.ResponseWriter, len(params[0]))
		for u, param := range params[0] {
			_param0[u] = param.(http.ResponseWriter)
		}
		_param1 = make([]*http.Request, len(params[1]))
		for u, param := range params[1] {
			_param1[u] = param.(*http.Request)
		}
	}
	return
}
